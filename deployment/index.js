(()=>{var e={558:(e,t,s)=>{const r=s(860).Router(),o=s(147),n=s(464).promisify(o.unlink),i=s(890),a=s(957),c=s(90);var l=s(185).Types.ObjectId;const d=s(738)({dest:"uploads/"}),{uploadFile:p,getFileStream:u}=s(79);r.route("/").post(d.single("image"),(async(e,t)=>{const s=e.file,{email:r}=e.user[0];console.log(s),console.log(e.query.type,"-------");let o=e.query.type;const d=await p(s,o,r);await n(s.path),await async function(e,t,s){console.log(e,"-------result--------"),console.log(t,"--------email--------");let r=await c.find({email:t},{_id:1});r=r[0]._id.toString(),console.log(r);let o={imgLocation:`${e.Location}`,date:new Date,fileName:`img-${s.originalname}`};const n=await i.findOne({userId:new l(r)}),d=await a.findOne({userId:new l(r)});if("treatmentdoc"===e.Bucket&&d){let e=await a.updateOne({userId:new l(r)},{$push:{treatment_img_details:{$each:[o]}}});console.log(e,"------------")}else if(n){let e=await i.updateOne({userId:new l(r)},{$push:{report_img_details:{$each:[o]}}});console.log(e,"------------")}}(d,r,s),console.log(d),e.body.description,t.send({imagePath:`/images/${d.Key}`})})),e.exports=r},79:(e,t,s)=>{const r=s(147),o=s(212),n=(s(813),s(142),process.env.REGION),i=process.env.IAM_USER_KEY,a=process.env.IAM_USER_SECRET,c=s(900);t.uploadFile=function(e,t,s){console.log(t,"ttyyyy"),console.log(e,"------file-----");const l=r.createReadStream(e.path);console.log(c,"aws");const d=new o({region:n,accessKeyId:i,secretAccessKey:a});let p=c[t].BUCKET_NAME;console.log(p,"bucketname");const u={Bucket:p,Body:l,Key:`img-${e.originalname}`};return d.upload(u).promise()},t.getFileStream=function(e){const t={Key:e,Bucket:bucketName};return s3.getObject(t).createReadStream()}},765:(e,t,s)=>{const r=s(860).Router(),{genSaltSync:o,compareSync:n}=s(432),{sign:i}=s(344),a=s(90);r.route("/logout").post((async(e,t,s)=>{t.cookie("token",""),t.json({message:"Logout successfully"})})),r.route("/").post((async(e,t,s)=>{const{email:r,password:o}=e.body,c=await a.find({email:r},{current_level:1,email:1,password:1,_id:0,role:1,first_name:1,last_name:1,isPayment:1,plays:1,player_type:1,height:1,height_type:1,weight:1,weight_type:1});if(0==c.length)t.status(404).send({message:"user does not exist",status:404});else if(n(o,c[0].password)){const e=!Object.keys(c[0]).includes("isPayment");e&&!0!==e&&(c[0].isPayment=!1),c[0].password=void 0;const s=i({result:c},"Asdfkgr456Edlflg",{expiresIn:"24h"});t.cookie("token",s),t.json({message:"login successfully",token:s,current_level:c[0].current_level,email:c[0].email,role:c[0].role,first_name:c[0].first_name,last_name:c[0].last_name,isPayment:!!c[0].isPayment&&c[0].isPayment,plays:c[0].plays?c[0].plays:"",player_type:c[0].player_type?c[0].player_type:"",height:c[0].height?c[0].height:"",height_type:c[0].height_type?c[0].height_type:"",weight:c[0].weight?c[0].weight:"",weight_type:c[0].weight_type?c[0].weight_type:"",goal_level:c[0].goal_level?goal_level:"",time_frame:c[0].time_frame?time_frame:""})}else t.status(404).send({message:"Invalid username or password",status:404})})),e.exports=r},593:(e,t,s)=>{const r=s(860).Router(),{genSaltSync:o,hashSync:n}=s(432),i=s(90);r.route("/:id").get((async(e,t,s)=>{try{let s=e.params.id;console.log(e.params.id,"params");const r=await i.find().lean();console.log(r);const o=await i.findById(s);console.log(o,"data"),t.send(o)}catch(e){t.status(504).send({errMsg:"internal server error!!!",status:504})}})),r.route("/").put((async(e,t,s)=>{const{first_name:r,last_name:o}=e.body;e.user[0];let n={...e.body};const a=await i.updateOne({email:e.user[0].email},{$set:{...n}},{upsert:!1}).catch((e=>{console.log(e),t.status(504).json({errMsg:"internal server error",status:504})}));0!=a.length&&(console.log(a),t.send(a))})),e.exports=r},398:(e,t,s)=>{const r=s(860).Router(),{genSaltSync:o,hashSync:n}=s(432),i=s(90);r.route("/").get((async(e,t,s)=>{const r=await i.find({});t.send({a:r})})),r.route("/emailvalidation").get((async(e,t,s)=>{const r=e.query.email,o=await i.find({email:r});t.send({isUnique:0===o.length})})),r.route("/:role").post((async(e,t,s)=>{console.log("inside");const r=o(10),{body:a,params:c}=e,l=(a.current_level,a.password);a.password=n(a.password,r);const d=[],p={...a,...c,user_name:a.email,temp_password:l};0==(await i.find({email:a.email},{email:1})).length?i.create(p).then((async e=>{e.status=200,e.msg="Data inserted successfully..!!!",d.push(e._doc),t.status(200).send(d)})).catch((e=>{console.log(e),t.status(504).send({status:504,msg:"Error in inserting data..!!!"})})):t.status(403).send({msg:"user already exsist",status:403})})),e.exports=r},243:(e,t,s)=>{const r=s(860).Router(),{genSaltSync:o,compareSync:n}=s(432),{sign:i}=s(344),a=s(890),c=s(90);var l=s(185).Types.ObjectId;r.route("/").get((async(e,t,s)=>{const{email:r}=e.user[0],o=(await c.find({email:r},{_id:1}))[0]._id.toString(),n=await a.find({userId:new l(o)});console.log(JSON.parse(JSON.stringify(n))),console.log(typeof n),console.log(n),t.send(n)})),r.route("/:reportid").get((async(e,t,s)=>{const{email:r}=e.user[0],o=(await c.find({email:r},{_id:1}))[0]._id.toString();console.log({userId:new l(o),_id:e.params.reportid});const n=await a.findOne({userId:new l(o),_id:e.params.reportid});console.log(JSON.parse(JSON.stringify(n))),console.log(typeof n),console.log(n),t.send(n)})),e.exports=r},521:(e,t,s)=>{const r=s(860).Router(),{genSaltSync:o,compareSync:n}=s(432),{sign:i}=s(344),a=s(964),c=s(90),l=s(890);var d=s(185).Types.ObjectId;r.route("/").get((async(e,t,s)=>{try{const{email:s}=e.user[0],r=(await c.find({email:s},{_id:1}))[0]._id.toString(),o=await a.aggregate([{$match:{patientId:new d(r)}},{$sort:{test_date:1}},{$group:{_id:{test_name:"$test_name"},values:{$push:{test_date:"$test_date",test_numerical_value:"$test_numerical_value"}}}},{$project:{_id:0,test_name:"$_id.test_name",values:"$values"}}]);if(Array.isArray(o)&&o.length>0){let e=await l.find({userId:new d(r)},{report_date:1,_id:0});t.send({reportDate:e[0].report_date,testDetailsData:o})}else t.send({})}catch(e){console.log(e)}})),e.exports=r},838:(e,t,s)=>{const r=s(860).Router(),o=s(496),n=s(90),i=s(957);var a=s(185).Types.ObjectId;r.route("/").get((async(e,t,s)=>{try{const{email:s}=e.user[0],r=(await n.find({email:s},{_id:1}))[0]._id.toString();console.log(r,"------");const c=await o.find({userId:new a(r)},{summary:1,_id:0});console.log(c);const l=await i.find({userId:new a(r)});console.log(l,"---testData---"),t.send({medicalHistoryData:c,treatmentData:l})}catch(e){console.log(e)}})),r.route("/:tid").get((async(e,t,s)=>{try{const{tid:s}=e.params,r=await i.find({_id:new a(s)});t.send({treatmentData:r})}catch(e){console.log(e)}})),e.exports=r},900:e=>{e.exports={medicinedoc:{BUCKET_NAME:"medicinedoc",IAM_USER_KEY:process.env.IAM_USER_KEY,IAM_USER_SECRET:process.env.IAM_USER_SECRET,region:process.env.REGION},reportdocapp:{BUCKET_NAME:"reportdocapp",IAM_USER_KEY:process.env.IAM_USER_KEY,IAM_USER_SECRET:process.env.IAM_USER_SECRET,region:process.env.REGION},treatmentdoc:{BUCKET_NAME:"treatmentdoc",IAM_USER_KEY:process.env.IAM_USER_KEY,IAM_USER_SECRET:process.env.IAM_USER_SECRET,region:process.env.REGION}}},469:e=>{e.exports={dbUrl:"mongodb+srv://arkajitwork:india123@cluster0.txy3hyh.mongodb.net/?retryWrites=true&w=majority"}},965:(e,t,s)=>{const r={env:"production",isDev:!1};let o={};o=s(730);let n={...r,...o};e.exports=n},730:e=>{e.exports={dbUrl:"mongodb+srv://ashishs104:Arsenal%401886@cluster0.tr5qs.mongodb.net/myFirstDatabase?retryWrites=true&w=majority"}},377:(e,t,s)=>{const r=s(860);e.exports=e=>{e.use(r.urlencoded()),e.use(r.json())}},259:(e,t,s)=>{const r=s(965);s(185).connect(`${r.dbUrl}`).then((()=>{console.log("connected to mongoDB")})).catch((e=>{console.log(e)}))},90:(e,t,s)=>{const r=s(185),o=r.Schema,n=new o({first_name:{type:String,required:!0},last_name:{type:String},email:{type:String,required:!0},password:{type:String,required:!0},user_name:{type:String,required:!0},gender:{type:String,required:!0},dob:{type:String,required:!0},pincode:{type:String,required:!0},phone:{type:Number,required:!0},medicalrecords:[{type:o.Types.ObjectId,ref:"report_details"}]},{collection:"basic_information"});e.exports=r.model("basicInformation",n)},496:(e,t,s)=>{const r=s(185),o=r.Schema,n=new o({userId:{type:o.Types.ObjectId,ref:"basic_information"},summary:{type:String},m_date:{type:String,required:!0}},{collection:"medical_history"});e.exports=r.model("medicalHistorySchema",n)},890:(e,t,s)=>{const r=s(185),o=r.Schema,n=new o({userId:{type:o.Types.ObjectId,ref:"basic_information"},report_date:{type:String,required:!0},lab_name:{type:String,required:!0},prescribing_doctor:{type:String,required:!0},report_summary:[{type:Array,required:!0}],report_findings:{type:String},report_img_details:{type:Array}},{collection:"report_history"});e.exports=r.model("reportHistorySchema",n)},964:(e,t,s)=>{const r=s(185),o=r.Schema,n=new o({patientId:{type:o.Types.ObjectId,ref:"basic_information"},test:{type:String},test_date:{type:String,required:!0},test_numerical_value:{type:Number,required:!0},test_units:{type:String,required:!0},test_categorical_value:{type:String,required:!0},diagnostic_test_report:{type:String},test_name:{type:String}},{collection:"test_details"});e.exports=r.model("testDetailsSchema",n)},957:(e,t,s)=>{const r=s(185),o=r.Schema,n=new o({userId:{type:o.Types.ObjectId,ref:"basic_information"},patient:{type:String,required:!0},treatment_start_date:{type:String,required:!0},treatment_end_date:{type:String,required:!0},symptoms:[{type:String,required:!0}],treatment_goal:[{type:String,required:!0}],associated_tests:[{type:String,required:!0}],symptoms:[{type:String,required:!0}],treating_doctors:[{type:o.Types.ObjectId,ref:"basic_information"}],medication:[{type:String,required:!0}],medical_procedures:[{type:String,required:!0}],medical_advice:[{type:String,required:!0}],patient_requests:[{type:String,required:!0}],diagnosis:[{type:String,required:!0}],institutions:[{type:String,required:!0}],status:{type:String,required:!0},comments:[{type:String,required:!0}],treatment_img_details:{type:Array},summary:{type:String}},{collection:"treatment"});n.plugin(s(972)),n.plugin(s(760),{overrideMethods:!0,deletedAt:!0}),e.exports=r.model("treatmentSchema",n)},531:(e,t,s)=>{var r=s(860).Router();s(582);const o=s(717);r.use("/app/registration",s(398)),r.use("/app/login",s(765)),r.use("/app/user",s(765)),r.use("/app/upload",o,s(558)),r.use("/app/reporthistory",o,s(243)),r.use("/app/testdetails",o,s(521)),r.use("/app/profile",o,s(593)),r.use("/app/treatmentdetails",o,s(838)),e.exports=r},907:e=>{e.exports={JWT_KEY:"Asdfkgr456Edlflg"}},717:(e,t,s)=>{const{verify:r}=s(344),{JWT_KEY:o}=s(907);e.exports=function(e,t,s){let n;void 0!==e.get("authorization")?(n=e.get("authorization"),n=n.slice(7)):t.status(401).json({errMsg:"Invalid token",code:401}),n?r(n,o,((r,o)=>{r?t.status(401).json({errorMsg:"invalid token for user or token expired",code:401}):(e.user=o.result,s())})):t.status(401).json({errMsg:"Invalid token",code:401})}},212:e=>{"use strict";e.exports=require("aws-sdk/clients/s3")},432:e=>{"use strict";e.exports=require("bcryptjs")},986:e=>{"use strict";e.exports=require("body-parser")},582:e=>{"use strict";e.exports=require("cors")},142:e=>{"use strict";e.exports=require("dotenv")},860:e=>{"use strict";e.exports=require("express")},344:e=>{"use strict";e.exports=require("jsonwebtoken")},185:e=>{"use strict";e.exports=require("mongoose")},760:e=>{"use strict";e.exports=require("mongoose-delete")},972:e=>{"use strict";e.exports=require("mongoose-timestamp")},738:e=>{"use strict";e.exports=require("multer")},464:e=>{"use strict";e.exports=require("util")},813:e=>{"use strict";e.exports=require("uuidv4")},147:e=>{"use strict";e.exports=require("fs")},17:e=>{"use strict";e.exports=require("path")}},t={};function s(r){var o=t[r];if(void 0!==o)return o.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,s),n.exports}(()=>{const e=s(860)();s(17),s(142).config();const t=s(986);e.use(t.json({limit:"50mb",extended:!0})),e.use(t.urlencoded({extended:!0}));const r=process.env.PORT||8e3;s(377)(e);const o=s(531);s(259),e.use("/api/",o),process.env.PORT=8e3,e.listen(r,(()=>console.log(`Example app listening on port ${r}!`)))})()})();
//# sourceMappingURL=index.js.map